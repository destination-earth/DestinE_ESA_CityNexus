[tool.poetry]
name = "data-handling"
version = "0.1.0"
description = ""
authors = ["Solenix Engineering GmbH <info@solenix.ch>"]
readme = "README.md"
license = ""
packages = [{include = "data_handling"}]

[tool.poetry.dependencies]
python = "~3.11"
fastparquet = "^2024.2.0"
geopandas = "^0.14.3"
h3 = "^3.7.6"
pandas = "^2.2.0"
pyarrow = "^15.0.0"
shapely = "^2.0.2"
boto3 = "^1.34.43"
tomli = "^2.0.1"

[tool.poetry.group.test.dependencies]
pytest = "^7"
coverage = {extras = ["toml"], version = "^7"}

[tool.poetry.group.dev.dependencies]
setuptools = "^68.0"
isort = "^5.12"
pylint = "^2.17"
black = "^23.7"

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.isort]
py_version = 311
profile = "black"
combine_as_imports = true
src_paths = ["data_handling"]

[tool.pylint]
max-line-length = 120

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["-v", "--tb=long", "--import-mode=importlib"]
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["data_handling"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if __name__ == .__main__.:",
    ]

[tool.coverage.xml]
output = "coverage-report/coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
parquet_to_geojson = "data_handling.main:run_parquet_to_geojson"
parquet_to_csv = "data_handling.main:run_parquet_to_csv"
download_file = "data_handling.main:run_download_file"
